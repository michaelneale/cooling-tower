package jboss.cloud.elastic


import jboss.cloud.elastic.Cluster



declare NodeState
   cluster: Cluster  #the cluster this is a member of
   server: ServerInstance    #the instance this node is running on

   averageServerLoad: Float #average CPU load for this node
   busyConnectors: Integer  #percentage of connectors that are currently busy
   activeSessions: Integer  #the number of sessions
   receiveTraffic: Float    #traffic received in KB/s
   sendTraffic: Float       #traffic outbound in KB/s
   systemMemoryUsage: Float 
   systemHeapUsage: Float
end

#Can have Metric generic object - many of them?
#or a map on AppServer?
rule "All loaded up"
    when
        c: Cluster()
        forall(NoteState(cluster == c, averageServerLoad > 0.7))
    then
        requestNode("Too busy CPU", c)
end

rule "All busy connectors"
   when
       c: Cluster()
       forall( NoteState(cluster == c, busyConnectors == 100) )
   then
       requestNode("no free connectors", c)
end

rule "Getting busy"
    when
        c: Cluster()
        not NodeState(cluster == c, busyConnectors < 50)
    then
        requestNode("not enough free connectors in cluster", c)
end




rule "Can scale down"
    when
       c: Cluster()
       ns: NodeState(cluster == c, busyConnectors == 0, activeSessions == 0)
       exists: NodeState(this != ns)
    then
       shutdownNode("no activity", ns)
end






#and so on...

